// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "platform", Type: field.TypeString},
		{Name: "platform_account_id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "profile_url", Type: field.TypeString},
		{Name: "avatar_url", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "bound_user_id", Type: field.TypeInt64, Nullable: true},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "accounts_users_account",
				Columns:    []*schema.Column{AccountsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "account_platform_platform_account_id",
				Unique:  true,
				Columns: []*schema.Column{AccountsColumns[1], AccountsColumns[2]},
			},
		},
	}
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "version_number", Type: field.TypeUint64},
		{Name: "version_date", Type: field.TypeTime},
		{Name: "app_sources", Type: field.TypeJSON},
		{Name: "public", Type: field.TypeBool},
		{Name: "bound_store_app_id", Type: field.TypeInt64, Nullable: true},
		{Name: "stop_store_manage", Type: field.TypeBool, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"unknown", "game"}},
		{Name: "short_description", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "icon_image_url", Type: field.TypeString, Nullable: true},
		{Name: "icon_image_id", Type: field.TypeInt64},
		{Name: "background_image_url", Type: field.TypeString, Nullable: true},
		{Name: "background_image_id", Type: field.TypeInt64},
		{Name: "cover_image_url", Type: field.TypeString, Nullable: true},
		{Name: "cover_image_id", Type: field.TypeInt64},
		{Name: "release_date", Type: field.TypeString, Nullable: true},
		{Name: "developer", Type: field.TypeString, Nullable: true},
		{Name: "publisher", Type: field.TypeString, Nullable: true},
		{Name: "tags", Type: field.TypeJSON},
		{Name: "alternative_names", Type: field.TypeJSON},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "creator_device_id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:       "apps",
		Columns:    AppsColumns,
		PrimaryKey: []*schema.Column{AppsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "apps_devices_app",
				Columns:    []*schema.Column{AppsColumns[24]},
				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "apps_users_app",
				Columns:    []*schema.Column{AppsColumns[25]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "app_user_id",
				Unique:  false,
				Columns: []*schema.Column{AppsColumns[25]},
			},
		},
	}
	// AppAppCategoriesColumns holds the columns for the "app_app_categories" table.
	AppAppCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "app_category_id", Type: field.TypeInt64},
		{Name: "app_id", Type: field.TypeInt64},
	}
	// AppAppCategoriesTable holds the schema information for the "app_app_categories" table.
	AppAppCategoriesTable = &schema.Table{
		Name:       "app_app_categories",
		Columns:    AppAppCategoriesColumns,
		PrimaryKey: []*schema.Column{AppAppCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_app_categories_app_categories_app_category",
				Columns:    []*schema.Column{AppAppCategoriesColumns[1]},
				RefColumns: []*schema.Column{AppCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "app_app_categories_apps_app",
				Columns:    []*schema.Column{AppAppCategoriesColumns[2]},
				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appappcategory_app_category_id_app_id",
				Unique:  true,
				Columns: []*schema.Column{AppAppCategoriesColumns[1], AppAppCategoriesColumns[2]},
			},
		},
	}
	// AppCategoriesColumns holds the columns for the "app_categories" table.
	AppCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "version_number", Type: field.TypeUint64},
		{Name: "version_date", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AppCategoriesTable holds the schema information for the "app_categories" table.
	AppCategoriesTable = &schema.Table{
		Name:       "app_categories",
		Columns:    AppCategoriesColumns,
		PrimaryKey: []*schema.Column{AppCategoriesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appcategory_user_id",
				Unique:  false,
				Columns: []*schema.Column{AppCategoriesColumns[1]},
			},
		},
	}
	// AppInfosColumns holds the columns for the "app_infos" table.
	AppInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "source", Type: field.TypeString},
		{Name: "source_app_id", Type: field.TypeString},
		{Name: "source_url", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"unknown", "game"}},
		{Name: "short_description", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "icon_image_url", Type: field.TypeString, Nullable: true},
		{Name: "icon_image_id", Type: field.TypeInt64},
		{Name: "background_image_url", Type: field.TypeString, Nullable: true},
		{Name: "background_image_id", Type: field.TypeInt64},
		{Name: "cover_image_url", Type: field.TypeString, Nullable: true},
		{Name: "cover_image_id", Type: field.TypeInt64},
		{Name: "release_date", Type: field.TypeString, Nullable: true},
		{Name: "developer", Type: field.TypeString, Nullable: true},
		{Name: "publisher", Type: field.TypeString, Nullable: true},
		{Name: "tags", Type: field.TypeJSON},
		{Name: "alternative_names", Type: field.TypeJSON},
		{Name: "raw_data", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AppInfosTable holds the schema information for the "app_infos" table.
	AppInfosTable = &schema.Table{
		Name:       "app_infos",
		Columns:    AppInfosColumns,
		PrimaryKey: []*schema.Column{AppInfosColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "appinfo_source_source_app_id",
				Unique:  true,
				Columns: []*schema.Column{AppInfosColumns[1], AppInfosColumns[2]},
			},
		},
	}
	// AppRunTimesColumns holds the columns for the "app_run_times" table.
	AppRunTimesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "device_id", Type: field.TypeInt64},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "duration", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "app_id", Type: field.TypeInt64},
	}
	// AppRunTimesTable holds the schema information for the "app_run_times" table.
	AppRunTimesTable = &schema.Table{
		Name:       "app_run_times",
		Columns:    AppRunTimesColumns,
		PrimaryKey: []*schema.Column{AppRunTimesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "app_run_times_apps_app_run_time",
				Columns:    []*schema.Column{AppRunTimesColumns[7]},
				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appruntime_user_id_app_id",
				Unique:  false,
				Columns: []*schema.Column{AppRunTimesColumns[1], AppRunTimesColumns[7]},
			},
			{
				Name:    "appruntime_start_time_duration",
				Unique:  true,
				Columns: []*schema.Column{AppRunTimesColumns[3], AppRunTimesColumns[4]},
			},
		},
	}
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "device_name", Type: field.TypeString},
		{Name: "system_type", Type: field.TypeEnum, Enums: []string{"ios", "android", "web", "windows", "macos", "linux", "unknown"}},
		{Name: "system_version", Type: field.TypeString},
		{Name: "client_name", Type: field.TypeString},
		{Name: "client_source_code_address", Type: field.TypeString},
		{Name: "client_version", Type: field.TypeString},
		{Name: "client_local_id", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:       "devices",
		Columns:    DevicesColumns,
		PrimaryKey: []*schema.Column{DevicesColumns[0]},
	}
	// FeedsColumns holds the columns for the "feeds" table.
	FeedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "link", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeString, Nullable: true},
		{Name: "authors", Type: field.TypeJSON, Nullable: true},
		{Name: "image", Type: field.TypeJSON, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "feed_config_feed", Type: field.TypeInt64, Unique: true},
	}
	// FeedsTable holds the schema information for the "feeds" table.
	FeedsTable = &schema.Table{
		Name:       "feeds",
		Columns:    FeedsColumns,
		PrimaryKey: []*schema.Column{FeedsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feeds_feed_configs_feed",
				Columns:    []*schema.Column{FeedsColumns[9]},
				RefColumns: []*schema.Column{FeedConfigsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FeedActionSetsColumns holds the columns for the "feed_action_sets" table.
	FeedActionSetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "actions", Type: field.TypeJSON},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_feed_action_set", Type: field.TypeInt64},
	}
	// FeedActionSetsTable holds the schema information for the "feed_action_sets" table.
	FeedActionSetsTable = &schema.Table{
		Name:       "feed_action_sets",
		Columns:    FeedActionSetsColumns,
		PrimaryKey: []*schema.Column{FeedActionSetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_action_sets_users_feed_action_set",
				Columns:    []*schema.Column{FeedActionSetsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FeedConfigsColumns holds the columns for the "feed_configs" table.
	FeedConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "source", Type: field.TypeJSON},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "suspend"}},
		{Name: "category", Type: field.TypeString},
		{Name: "pull_interval", Type: field.TypeInt64},
		{Name: "hide_items", Type: field.TypeBool, Default: false},
		{Name: "latest_pull_at", Type: field.TypeTime},
		{Name: "latest_pull_status", Type: field.TypeEnum, Enums: []string{"processing", "success", "failed"}},
		{Name: "latest_pull_message", Type: field.TypeString},
		{Name: "next_pull_begin_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_feed_config", Type: field.TypeInt64},
	}
	// FeedConfigsTable holds the schema information for the "feed_configs" table.
	FeedConfigsTable = &schema.Table{
		Name:       "feed_configs",
		Columns:    FeedConfigsColumns,
		PrimaryKey: []*schema.Column{FeedConfigsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_configs_users_feed_config",
				Columns:    []*schema.Column{FeedConfigsColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feedconfig_category",
				Unique:  false,
				Columns: []*schema.Column{FeedConfigsColumns[5]},
			},
		},
	}
	// FeedConfigActionsColumns holds the columns for the "feed_config_actions" table.
	FeedConfigActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "index", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "feed_config_id", Type: field.TypeInt64},
		{Name: "feed_action_set_id", Type: field.TypeInt64},
	}
	// FeedConfigActionsTable holds the schema information for the "feed_config_actions" table.
	FeedConfigActionsTable = &schema.Table{
		Name:       "feed_config_actions",
		Columns:    FeedConfigActionsColumns,
		PrimaryKey: []*schema.Column{FeedConfigActionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_config_actions_feed_configs_feed_config",
				Columns:    []*schema.Column{FeedConfigActionsColumns[4]},
				RefColumns: []*schema.Column{FeedConfigsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "feed_config_actions_feed_action_sets_feed_action_set",
				Columns:    []*schema.Column{FeedConfigActionsColumns[5]},
				RefColumns: []*schema.Column{FeedActionSetsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feedconfigaction_feed_config_id_feed_action_set_id",
				Unique:  true,
				Columns: []*schema.Column{FeedConfigActionsColumns[4], FeedConfigActionsColumns[5]},
			},
		},
	}
	// FeedItemsColumns holds the columns for the "feed_items" table.
	FeedItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "authors", Type: field.TypeJSON, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "guid", Type: field.TypeString},
		{Name: "link", Type: field.TypeString, Nullable: true},
		{Name: "image", Type: field.TypeJSON, Nullable: true},
		{Name: "published", Type: field.TypeString, Nullable: true},
		{Name: "published_parsed", Type: field.TypeTime},
		{Name: "updated", Type: field.TypeString, Nullable: true},
		{Name: "updated_parsed", Type: field.TypeTime, Nullable: true},
		{Name: "enclosures", Type: field.TypeJSON, Nullable: true},
		{Name: "publish_platform", Type: field.TypeString, Nullable: true},
		{Name: "read_count", Type: field.TypeInt64, Default: 0},
		{Name: "digest_description", Type: field.TypeString, Nullable: true},
		{Name: "digest_images", Type: field.TypeJSON, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "feed_id", Type: field.TypeInt64},
	}
	// FeedItemsTable holds the schema information for the "feed_items" table.
	FeedItemsTable = &schema.Table{
		Name:       "feed_items",
		Columns:    FeedItemsColumns,
		PrimaryKey: []*schema.Column{FeedItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_items_feeds_item",
				Columns:    []*schema.Column{FeedItemsColumns[19]},
				RefColumns: []*schema.Column{FeedsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feeditem_feed_id_guid",
				Unique:  true,
				Columns: []*schema.Column{FeedItemsColumns[19], FeedItemsColumns[5]},
			},
			{
				Name:    "feeditem_publish_platform",
				Unique:  false,
				Columns: []*schema.Column{FeedItemsColumns[13]},
			},
		},
	}
	// FeedItemCollectionsColumns holds the columns for the "feed_item_collections" table.
	FeedItemCollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_feed_item_collection", Type: field.TypeInt64},
	}
	// FeedItemCollectionsTable holds the schema information for the "feed_item_collections" table.
	FeedItemCollectionsTable = &schema.Table{
		Name:       "feed_item_collections",
		Columns:    FeedItemCollectionsColumns,
		PrimaryKey: []*schema.Column{FeedItemCollectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_item_collections_users_feed_item_collection",
				Columns:    []*schema.Column{FeedItemCollectionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feeditemcollection_category",
				Unique:  false,
				Columns: []*schema.Column{FeedItemCollectionsColumns[3]},
			},
		},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "size", Type: field.TypeInt64},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"gebura_save", "chesed_image"}},
		{Name: "sha256", Type: field.TypeBytes},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_file", Type: field.TypeInt64, Nullable: true},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "files_users_file",
				Columns:    []*schema.Column{FilesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ImagesColumns holds the columns for the "images" table.
	ImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"uploaded", "scanned"}},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "file_image", Type: field.TypeInt64, Unique: true, Nullable: true},
		{Name: "user_image", Type: field.TypeInt64},
	}
	// ImagesTable holds the schema information for the "images" table.
	ImagesTable = &schema.Table{
		Name:       "images",
		Columns:    ImagesColumns,
		PrimaryKey: []*schema.Column{ImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "images_files_image",
				Columns:    []*schema.Column{ImagesColumns[6]},
				RefColumns: []*schema.Column{FilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "images_users_image",
				Columns:    []*schema.Column{ImagesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// NotifyFlowsColumns holds the columns for the "notify_flows" table.
	NotifyFlowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "suspend"}},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_notify_flow", Type: field.TypeInt64},
	}
	// NotifyFlowsTable holds the schema information for the "notify_flows" table.
	NotifyFlowsTable = &schema.Table{
		Name:       "notify_flows",
		Columns:    NotifyFlowsColumns,
		PrimaryKey: []*schema.Column{NotifyFlowsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notify_flows_users_notify_flow",
				Columns:    []*schema.Column{NotifyFlowsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// NotifyFlowSourcesColumns holds the columns for the "notify_flow_sources" table.
	NotifyFlowSourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "filter_include_keywords", Type: field.TypeJSON},
		{Name: "filter_exclude_keywords", Type: field.TypeJSON},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "notify_flow_id", Type: field.TypeInt64},
		{Name: "notify_source_id", Type: field.TypeInt64},
	}
	// NotifyFlowSourcesTable holds the schema information for the "notify_flow_sources" table.
	NotifyFlowSourcesTable = &schema.Table{
		Name:       "notify_flow_sources",
		Columns:    NotifyFlowSourcesColumns,
		PrimaryKey: []*schema.Column{NotifyFlowSourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notify_flow_sources_notify_flows_notify_flow",
				Columns:    []*schema.Column{NotifyFlowSourcesColumns[5]},
				RefColumns: []*schema.Column{NotifyFlowsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "notify_flow_sources_notify_sources_notify_source",
				Columns:    []*schema.Column{NotifyFlowSourcesColumns[6]},
				RefColumns: []*schema.Column{NotifySourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "notifyflowsource_notify_flow_id_notify_source_id",
				Unique:  true,
				Columns: []*schema.Column{NotifyFlowSourcesColumns[5], NotifyFlowSourcesColumns[6]},
			},
		},
	}
	// NotifyFlowTargetsColumns holds the columns for the "notify_flow_targets" table.
	NotifyFlowTargetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "filter_include_keywords", Type: field.TypeJSON},
		{Name: "filter_exclude_keywords", Type: field.TypeJSON},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "notify_flow_id", Type: field.TypeInt64},
		{Name: "notify_target_id", Type: field.TypeInt64},
	}
	// NotifyFlowTargetsTable holds the schema information for the "notify_flow_targets" table.
	NotifyFlowTargetsTable = &schema.Table{
		Name:       "notify_flow_targets",
		Columns:    NotifyFlowTargetsColumns,
		PrimaryKey: []*schema.Column{NotifyFlowTargetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notify_flow_targets_notify_flows_notify_flow",
				Columns:    []*schema.Column{NotifyFlowTargetsColumns[5]},
				RefColumns: []*schema.Column{NotifyFlowsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "notify_flow_targets_notify_targets_notify_target",
				Columns:    []*schema.Column{NotifyFlowTargetsColumns[6]},
				RefColumns: []*schema.Column{NotifyTargetsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "notifyflowtarget_notify_flow_id_notify_target_id",
				Unique:  true,
				Columns: []*schema.Column{NotifyFlowTargetsColumns[5], NotifyFlowTargetsColumns[6]},
			},
		},
	}
	// NotifySourcesColumns holds the columns for the "notify_sources" table.
	NotifySourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "feed_config_id", Type: field.TypeInt64, Nullable: true},
		{Name: "feed_item_collection_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_notify_source", Type: field.TypeInt64},
	}
	// NotifySourcesTable holds the schema information for the "notify_sources" table.
	NotifySourcesTable = &schema.Table{
		Name:       "notify_sources",
		Columns:    NotifySourcesColumns,
		PrimaryKey: []*schema.Column{NotifySourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notify_sources_feed_configs_notify_source",
				Columns:    []*schema.Column{NotifySourcesColumns[3]},
				RefColumns: []*schema.Column{FeedConfigsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "notify_sources_feed_item_collections_notify_source",
				Columns:    []*schema.Column{NotifySourcesColumns[4]},
				RefColumns: []*schema.Column{FeedItemCollectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "notify_sources_users_notify_source",
				Columns:    []*schema.Column{NotifySourcesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// NotifyTargetsColumns holds the columns for the "notify_targets" table.
	NotifyTargetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "destination", Type: field.TypeJSON},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "suspend"}},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_notify_target", Type: field.TypeInt64},
	}
	// NotifyTargetsTable holds the schema information for the "notify_targets" table.
	NotifyTargetsTable = &schema.Table{
		Name:       "notify_targets",
		Columns:    NotifyTargetsColumns,
		PrimaryKey: []*schema.Column{NotifyTargetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notify_targets_users_notify_target",
				Columns:    []*schema.Column{NotifyTargetsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PorterContextsColumns holds the columns for the "porter_contexts" table.
	PorterContextsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "global_name", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "context_json", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "disabled"}},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_porter_context", Type: field.TypeInt64},
	}
	// PorterContextsTable holds the schema information for the "porter_contexts" table.
	PorterContextsTable = &schema.Table{
		Name:       "porter_contexts",
		Columns:    PorterContextsColumns,
		PrimaryKey: []*schema.Column{PorterContextsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "porter_contexts_users_porter_context",
				Columns:    []*schema.Column{PorterContextsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "portercontext_global_name_region",
				Unique:  true,
				Columns: []*schema.Column{PorterContextsColumns[1], PorterContextsColumns[2]},
			},
		},
	}
	// PorterInstancesColumns holds the columns for the "porter_instances" table.
	PorterInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "version", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "source_code_address", Type: field.TypeString},
		{Name: "build_version", Type: field.TypeString},
		{Name: "build_date", Type: field.TypeString},
		{Name: "global_name", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "feature_summary", Type: field.TypeJSON},
		{Name: "context_json_schema", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "blocked"}},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// PorterInstancesTable holds the schema information for the "porter_instances" table.
	PorterInstancesTable = &schema.Table{
		Name:       "porter_instances",
		Columns:    PorterInstancesColumns,
		PrimaryKey: []*schema.Column{PorterInstancesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "porterinstance_address",
				Unique:  true,
				Columns: []*schema.Column{PorterInstancesColumns[8]},
			},
			{
				Name:    "porterinstance_global_name_region",
				Unique:  false,
				Columns: []*schema.Column{PorterInstancesColumns[7], PorterInstancesColumns[9]},
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "refresh_token", Type: field.TypeString},
		{Name: "expire_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "device_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_devices_session",
				Columns:    []*schema.Column{SessionsColumns[5]},
				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_users_session",
				Columns:    []*schema.Column{SessionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "session_user_id_device_id",
				Unique:  true,
				Columns: []*schema.Column{SessionsColumns[6], SessionsColumns[5]},
			},
			{
				Name:    "session_refresh_token",
				Unique:  true,
				Columns: []*schema.Column{SessionsColumns[1]},
			},
		},
	}
	// StoreAppsColumns holds the columns for the "store_apps" table.
	StoreAppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// StoreAppsTable holds the schema information for the "store_apps" table.
	StoreAppsTable = &schema.Table{
		Name:       "store_apps",
		Columns:    StoreAppsColumns,
		PrimaryKey: []*schema.Column{StoreAppsColumns[0]},
	}
	// StoreAppBinariesColumns holds the columns for the "store_app_binaries" table.
	StoreAppBinariesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "size_bytes", Type: field.TypeInt64, Nullable: true},
		{Name: "public_url", Type: field.TypeString, Nullable: true},
		{Name: "sha256", Type: field.TypeBytes, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// StoreAppBinariesTable holds the schema information for the "store_app_binaries" table.
	StoreAppBinariesTable = &schema.Table{
		Name:       "store_app_binaries",
		Columns:    StoreAppBinariesColumns,
		PrimaryKey: []*schema.Column{StoreAppBinariesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "storeappbinary_sha256",
				Unique:  true,
				Columns: []*schema.Column{StoreAppBinariesColumns[4]},
			},
		},
	}
	// SystemNotificationsColumns holds the columns for the "system_notifications" table.
	SystemNotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"system", "user"}},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"info", "warn", "error", "ongoing"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"unread", "read", "dismissed"}},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// SystemNotificationsTable holds the schema information for the "system_notifications" table.
	SystemNotificationsTable = &schema.Table{
		Name:       "system_notifications",
		Columns:    SystemNotificationsColumns,
		PrimaryKey: []*schema.Column{SystemNotificationsColumns[0]},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "public", Type: field.TypeBool, Default: false},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_tag", Type: field.TypeInt64},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tags_users_tag",
				Columns:    []*schema.Column{TagsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "blocked"}},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"admin", "normal"}},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "creator_id", Type: field.TypeInt64, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_users_created_user",
				Columns:    []*schema.Column{UsersColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FeedItemFeedItemCollectionColumns holds the columns for the "feed_item_feed_item_collection" table.
	FeedItemFeedItemCollectionColumns = []*schema.Column{
		{Name: "feed_item_id", Type: field.TypeInt64},
		{Name: "feed_item_collection_id", Type: field.TypeInt64},
	}
	// FeedItemFeedItemCollectionTable holds the schema information for the "feed_item_feed_item_collection" table.
	FeedItemFeedItemCollectionTable = &schema.Table{
		Name:       "feed_item_feed_item_collection",
		Columns:    FeedItemFeedItemCollectionColumns,
		PrimaryKey: []*schema.Column{FeedItemFeedItemCollectionColumns[0], FeedItemFeedItemCollectionColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_item_feed_item_collection_feed_item_id",
				Columns:    []*schema.Column{FeedItemFeedItemCollectionColumns[0]},
				RefColumns: []*schema.Column{FeedItemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "feed_item_feed_item_collection_feed_item_collection_id",
				Columns:    []*schema.Column{FeedItemFeedItemCollectionColumns[1]},
				RefColumns: []*schema.Column{FeedItemCollectionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		AppsTable,
		AppAppCategoriesTable,
		AppCategoriesTable,
		AppInfosTable,
		AppRunTimesTable,
		DevicesTable,
		FeedsTable,
		FeedActionSetsTable,
		FeedConfigsTable,
		FeedConfigActionsTable,
		FeedItemsTable,
		FeedItemCollectionsTable,
		FilesTable,
		ImagesTable,
		NotifyFlowsTable,
		NotifyFlowSourcesTable,
		NotifyFlowTargetsTable,
		NotifySourcesTable,
		NotifyTargetsTable,
		PorterContextsTable,
		PorterInstancesTable,
		SessionsTable,
		StoreAppsTable,
		StoreAppBinariesTable,
		SystemNotificationsTable,
		TagsTable,
		UsersTable,
		FeedItemFeedItemCollectionTable,
	}
)

func init() {
	AccountsTable.ForeignKeys[0].RefTable = UsersTable
	AppsTable.ForeignKeys[0].RefTable = DevicesTable
	AppsTable.ForeignKeys[1].RefTable = UsersTable
	AppAppCategoriesTable.ForeignKeys[0].RefTable = AppCategoriesTable
	AppAppCategoriesTable.ForeignKeys[1].RefTable = AppsTable
	AppRunTimesTable.ForeignKeys[0].RefTable = AppsTable
	FeedsTable.ForeignKeys[0].RefTable = FeedConfigsTable
	FeedActionSetsTable.ForeignKeys[0].RefTable = UsersTable
	FeedConfigsTable.ForeignKeys[0].RefTable = UsersTable
	FeedConfigActionsTable.ForeignKeys[0].RefTable = FeedConfigsTable
	FeedConfigActionsTable.ForeignKeys[1].RefTable = FeedActionSetsTable
	FeedItemsTable.ForeignKeys[0].RefTable = FeedsTable
	FeedItemCollectionsTable.ForeignKeys[0].RefTable = UsersTable
	FilesTable.ForeignKeys[0].RefTable = UsersTable
	ImagesTable.ForeignKeys[0].RefTable = FilesTable
	ImagesTable.ForeignKeys[1].RefTable = UsersTable
	NotifyFlowsTable.ForeignKeys[0].RefTable = UsersTable
	NotifyFlowSourcesTable.ForeignKeys[0].RefTable = NotifyFlowsTable
	NotifyFlowSourcesTable.ForeignKeys[1].RefTable = NotifySourcesTable
	NotifyFlowTargetsTable.ForeignKeys[0].RefTable = NotifyFlowsTable
	NotifyFlowTargetsTable.ForeignKeys[1].RefTable = NotifyTargetsTable
	NotifySourcesTable.ForeignKeys[0].RefTable = FeedConfigsTable
	NotifySourcesTable.ForeignKeys[1].RefTable = FeedItemCollectionsTable
	NotifySourcesTable.ForeignKeys[2].RefTable = UsersTable
	NotifyTargetsTable.ForeignKeys[0].RefTable = UsersTable
	PorterContextsTable.ForeignKeys[0].RefTable = UsersTable
	SessionsTable.ForeignKeys[0].RefTable = DevicesTable
	SessionsTable.ForeignKeys[1].RefTable = UsersTable
	TagsTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = UsersTable
	FeedItemFeedItemCollectionTable.ForeignKeys[0].RefTable = FeedItemsTable
	FeedItemFeedItemCollectionTable.ForeignKeys[1].RefTable = FeedItemCollectionsTable
}
